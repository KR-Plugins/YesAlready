name: Build

# Put your personal access token in a repository secret named PAT for cross-repository access

on:
  push:
    tags:
      - '*'

env:
  PUBLIC_NAME: Yes Already
  SOLUTION_NAME: YesAlready
  INTERNAL_NAME: YesAlready
  RELEASE_DIR: YesAlready\bin\Release\YesAlready
  PERSONAL_PLUGIN_REPO: daemitus/MyDalamudPlugins
  PR_PLUGIN_REPO: daemitus/DalamudPlugins

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Download Dalamud
      run: |
        Invoke-WebRequest -Uri https://github.com/dohwacorp/Dalamud/releases/latest/download/dalamud.zip -OutFile latest.zip
        Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev\"   
    - name: Build
      run: |
        dotnet restore -r win ${{ env.SOLUTION_NAME }}.sln
        dotnet build --configuration Release
      env: 
        DOTNET_CLI_TELEMETRY_OPTOUT: true
    - uses: actions/upload-artifact@v2
      with:
        name: PluginRepoZip
        path: ${{ env.RELEASE_DIR }}
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ""
          prerelease: true
      - uses: actions/download-artifact@v2
        with:
          name: PluginRepoZip
          path: ${{ env.INTERNAL_NAME }}
      - name: Display structure of downloaded files
        run: ls -R
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.INTERNAL_NAME }}/latest.zip
          asset_name: ${{ env.INTERNAL_NAME }}.zip
          asset_content_type: application/zip
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.INTERNAL_NAME }}/${{ env.INTERNAL_NAME }}.json
          asset_name: ${{ env.INTERNAL_NAME }}.json
          asset_content_type: text/plain

#  deploy:
#    needs: build
#    if: "contains(toJSON(github.event.commits.*.message), '[PUSH]')"
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        repository: ${{ env.PERSONAL_PLUGIN_REPO }}
#        token: ${{ secrets.PAT }}
#    - uses: actions/download-artifact@v2
#      with:
#        name: PluginRepoZip
#        path: plugins/${{ env.INTERNAL_NAME }}
#    - uses: EndBug/add-and-commit@v7
#      with:
#        add: --all
#        author_name: GitHub Action
#        author_email: github-actions[bot]@users.noreply.github.com
#        message: Update ${{ env.INTERNAL_NAME }}
    
#  pull_request:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#    - name: Download artifact
#      uses: actions/download-artifact@v2
#      id: download-artifact
#      with:
#        name: PluginRepoZip
#        path: PluginArtifact
#    - uses: daemitus/DalamudPluginPR@master
#      with:
#        token: ${{ secrets.PAT }}
#        artifact_path: ${{ steps.download-artifact.outputs.download-path }}
